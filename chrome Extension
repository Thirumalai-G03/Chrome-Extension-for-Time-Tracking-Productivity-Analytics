chrome-time-tracker-extension/
├── manifest.json
├── background.js
├── content.js
├── popup.html
├── popup.js
├── style.css
└── README.md

manifest.json
{
  "manifest_version": 3,
  "name": "Time Tracker Extension",
  "version": "1.0",
  "description": "Tracks time spent on websites and provides productivity analytics.",
  "permissions": ["tabs", "storage"],
  "background": {
    "service_worker": "background.js"
  },
  "action": {
    "default_popup": "popup.html",
    "default_icon": "icon.png"
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "js": ["content.js"]
    }
  ]
}


background.js
let activeTabId = null;
let activeStartTime = null;

chrome.tabs.onActivated.addListener(async (activeInfo) => {
  if (activeTabId && activeStartTime) {
    const timeSpent = Date.now() - activeStartTime;
    await updateTime(activeTabId, timeSpent);
  }

  activeTabId = activeInfo.tabId;
  activeStartTime = Date.now();
});

chrome.tabs.onRemoved.addListener(async (tabId) => {
  if (tabId === activeTabId && activeStartTime) {
    const timeSpent = Date.now() - activeStartTime;
    await updateTime(tabId, timeSpent);
    activeTabId = null;
    activeStartTime = null;
  }
});

async function updateTime(tabId, timeSpent) {
  chrome.tabs.get(tabId, (tab) => {
    if (tab && tab.url) {
      const url = new URL(tab.url);
      const domain = url.hostname;

      chrome.storage.local.get([domain], (result) => {
        let totalTime = result[domain] || 0;
        totalTime += timeSpent;

        chrome.storage.local.set({ [domain]: totalTime });
      });
    }
  });
}


popup.html
<!DOCTYPE html>
<html>
<head>
  <title>Time Tracker</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h2>Time Spent on Websites</h2>
  <div id="report"></div>

  <script src="popup.js"></script>
</body>
</html>


popup.js
document.addEventListener('DOMContentLoaded', () => {
  chrome.storage.local.get(null, (items) => {
    const report = document.getElementById('report');
    report.innerHTML = '';

    for (const [domain, time] of Object.entries(items)) {
      const minutes = Math.round(time / 60000);
      const div = document.createElement('div');
      div.textContent = `${domain}: ${minutes} min`;
      report.appendChild(div);
    }
  });
});


Go to chrome://extensions

Enable Developer Mode

Click Load unpacked

Select your chrome-time-tracker-extension folder.

The extension will appear in your browser.

Click the extension to see your tracked time.
